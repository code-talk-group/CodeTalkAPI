// <auto-generated />
using CodeTalkAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodeTalkAPI.Migrations
{
    [DbContext(typeof(CodeTalkDBContext))]
    [Migration("20190709190103_seedData")]
    partial class seedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CodeTalkAPI.Models.Default", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseString");

                    b.Property<int>("options");

                    b.HasKey("Id");

                    b.ToTable("DefaultSnippets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseString = "*Method Name* is a public method with a void return type that takes in a *Data Type* called *Parameter* . When the method is called all the statements and arguments defined within the curly braces will run.",
                            options = 0
                        },
                        new
                        {
                            Id = 2,
                            BaseString = "Needs the sentence",
                            options = 1
                        },
                        new
                        {
                            Id = 3,
                            BaseString = "Needs the sentence",
                            options = 3
                        },
                        new
                        {
                            Id = 4,
                            BaseString = "Needs the sentence",
                            options = 2
                        });
                });

            modelBuilder.Entity("CodeTalkAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("ReturnString");

                    b.HasKey("Id");

                    b.ToTable("UserSnippets");
                });
#pragma warning restore 612, 618
        }
    }
}
